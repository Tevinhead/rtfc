"""Sync student_achievements schema

Revision ID: 0b10da5cdf52
Revises: b879f555a6b0
Create Date: 2025-02-09 15:23:42.690867+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0b10da5cdf52'
down_revision: Union[str, None] = 'b879f555a6b0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('achievements', sa.Column('criteria', sa.JSON(), nullable=True))
    op.add_column('achievements', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('achievements', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.drop_column('achievements', 'icon')
    op.alter_column('arena_participants', 'fights_played',
               existing_type=sa.INTEGER(),
               server_default=None,
               nullable=True)
    op.drop_constraint('arena_participants_student_id_fkey', 'arena_participants', type_='foreignkey')
    op.drop_constraint('arena_participants_arena_id_fkey', 'arena_participants', type_='foreignkey')
    op.create_foreign_key(None, 'arena_participants', 'students', ['student_id'], ['id'])
    op.create_foreign_key(None, 'arena_participants', 'arena_sessions', ['arena_id'], ['id'])
    op.alter_column('arena_sessions', 'status',
               existing_type=postgresql.ENUM('pending', 'in_progress', 'completed', name='arena_session_status'),
               nullable=True)
    op.alter_column('arena_sessions', 'rounds_completed',
               existing_type=sa.INTEGER(),
               server_default=None,
               nullable=True)
    op.drop_column('flashcards', 'question_image_url')
    op.drop_column('flashcards', 'answer_image_url')
    op.drop_constraint('match_participants_match_id_fkey', 'match_participants', type_='foreignkey')
    op.drop_constraint('match_participants_student_id_fkey', 'match_participants', type_='foreignkey')
    op.create_foreign_key(None, 'match_participants', 'matches', ['match_id'], ['id'])
    op.create_foreign_key(None, 'match_participants', 'students', ['student_id'], ['id'])
    op.alter_column('matches', 'status',
               existing_type=postgresql.ENUM('pending', 'in_progress', 'completed', name='match_status'),
               nullable=True)
    op.alter_column('matches', 'num_rounds',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('matches', 'rounds_completed',
               existing_type=sa.INTEGER(),
               server_default=None,
               nullable=True)
    op.drop_constraint('round_participants_round_id_fkey', 'round_participants', type_='foreignkey')
    op.drop_constraint('round_participants_student_id_fkey', 'round_participants', type_='foreignkey')
    op.create_foreign_key(None, 'round_participants', 'students', ['student_id'], ['id'])
    op.create_foreign_key(None, 'round_participants', 'rounds', ['round_id'], ['id'])
    op.drop_constraint('rounds_match_id_fkey', 'rounds', type_='foreignkey')
    op.create_foreign_key(None, 'rounds', 'matches', ['match_id'], ['id'])
    op.add_column('student_achievements', sa.Column('achieved_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('student_achievements', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint('student_achievements_student_id_achievement_id_key', 'student_achievements', type_='unique')
    op.drop_column('student_achievements', 'unlocked_at')
    op.drop_column('students', 'current_win_streak')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('students', sa.Column('current_win_streak', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.add_column('student_achievements', sa.Column('unlocked_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.create_unique_constraint('student_achievements_student_id_achievement_id_key', 'student_achievements', ['student_id', 'achievement_id'])
    op.alter_column('student_achievements', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('uuid_generate_v4()'),
               existing_nullable=False)
    op.drop_column('student_achievements', 'achieved_at')
    op.drop_constraint(None, 'rounds', type_='foreignkey')
    op.create_foreign_key('rounds_match_id_fkey', 'rounds', 'matches', ['match_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'round_participants', type_='foreignkey')
    op.drop_constraint(None, 'round_participants', type_='foreignkey')
    op.create_foreign_key('round_participants_student_id_fkey', 'round_participants', 'students', ['student_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('round_participants_round_id_fkey', 'round_participants', 'rounds', ['round_id'], ['id'], ondelete='CASCADE')
    op.alter_column('matches', 'rounds_completed',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               nullable=False)
    op.alter_column('matches', 'num_rounds',
               existing_type=sa.INTEGER(),
               server_default=sa.text('1'),
               existing_nullable=False)
    op.alter_column('matches', 'status',
               existing_type=postgresql.ENUM('pending', 'in_progress', 'completed', name='match_status'),
               nullable=False)
    op.drop_constraint(None, 'match_participants', type_='foreignkey')
    op.drop_constraint(None, 'match_participants', type_='foreignkey')
    op.create_foreign_key('match_participants_student_id_fkey', 'match_participants', 'students', ['student_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('match_participants_match_id_fkey', 'match_participants', 'matches', ['match_id'], ['id'], ondelete='CASCADE')
    op.add_column('flashcards', sa.Column('answer_image_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('flashcards', sa.Column('question_image_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('arena_sessions', 'rounds_completed',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               nullable=False)
    op.alter_column('arena_sessions', 'status',
               existing_type=postgresql.ENUM('pending', 'in_progress', 'completed', name='arena_session_status'),
               nullable=False)
    op.drop_constraint(None, 'arena_participants', type_='foreignkey')
    op.drop_constraint(None, 'arena_participants', type_='foreignkey')
    op.create_foreign_key('arena_participants_arena_id_fkey', 'arena_participants', 'arena_sessions', ['arena_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('arena_participants_student_id_fkey', 'arena_participants', 'students', ['student_id'], ['id'], ondelete='CASCADE')
    op.alter_column('arena_participants', 'fights_played',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               nullable=False)
    op.add_column('achievements', sa.Column('icon', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('achievements', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('uuid_generate_v4()'),
               existing_nullable=False)
    op.drop_column('achievements', 'updated_at')
    op.drop_column('achievements', 'criteria')
    # ### end Alembic commands ###
